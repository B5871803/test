// Code generated by entc, DO NOT EDIT.

package operativerecord

import (
	"time"
)

const (
	// Label holds the string label denoting the operativerecord type in the database.
	Label = "operativerecord"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOperativeTime holds the string denoting the operativetime field in the database.
	FieldOperativeTime = "operative_time"

	// EdgeExaminationroom holds the string denoting the examinationroom edge name in mutations.
	EdgeExaminationroom = "examinationroom"
	// EdgeNurse holds the string denoting the nurse edge name in mutations.
	EdgeNurse = "nurse"
	// EdgeOperative holds the string denoting the operative edge name in mutations.
	EdgeOperative = "operative"
	// EdgeTool holds the string denoting the tool edge name in mutations.
	EdgeTool = "tool"

	// Table holds the table name of the operativerecord in the database.
	Table = "operativerecords"
	// ExaminationroomTable is the table the holds the examinationroom relation/edge.
	ExaminationroomTable = "operativerecords"
	// ExaminationroomInverseTable is the table name for the Examinationroom entity.
	// It exists in this package in order to avoid circular dependency with the "examinationroom" package.
	ExaminationroomInverseTable = "examinationrooms"
	// ExaminationroomColumn is the table column denoting the examinationroom relation/edge.
	ExaminationroomColumn = "examinationroom_id"
	// NurseTable is the table the holds the nurse relation/edge.
	NurseTable = "operativerecords"
	// NurseInverseTable is the table name for the Nurse entity.
	// It exists in this package in order to avoid circular dependency with the "nurse" package.
	NurseInverseTable = "nurses"
	// NurseColumn is the table column denoting the nurse relation/edge.
	NurseColumn = "nurse_id"
	// OperativeTable is the table the holds the operative relation/edge.
	OperativeTable = "operativerecords"
	// OperativeInverseTable is the table name for the Operative entity.
	// It exists in this package in order to avoid circular dependency with the "operative" package.
	OperativeInverseTable = "operatives"
	// OperativeColumn is the table column denoting the operative relation/edge.
	OperativeColumn = "operative_type"
	// ToolTable is the table the holds the tool relation/edge.
	ToolTable = "operativerecords"
	// ToolInverseTable is the table name for the Tool entity.
	// It exists in this package in order to avoid circular dependency with the "tool" package.
	ToolInverseTable = "tools"
	// ToolColumn is the table column denoting the tool relation/edge.
	ToolColumn = "tool_name"
)

// Columns holds all SQL columns for operativerecord fields.
var Columns = []string{
	FieldID,
	FieldOperativeTime,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Operativerecord type.
var ForeignKeys = []string{
	"examinationroom_id",
	"nurse_id",
	"operative_type",
	"tool_name",
}

var (
	// DefaultOperativeTime holds the default value on creation for the OperativeTime field.
	DefaultOperativeTime func() time.Time
)
