// Code generated by entc, DO NOT EDIT.

package operative

const (
	// Label holds the string label denoting the operative type in the database.
	Label = "operative"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOperativeType holds the string denoting the operativetype field in the database.
	FieldOperativeType = "operative_type"
	// FieldOperativeName holds the string denoting the operativename field in the database.
	FieldOperativeName = "operative_name"

	// EdgeFromoperative holds the string denoting the fromoperative edge name in mutations.
	EdgeFromoperative = "fromoperative"

	// Table holds the table name of the operative in the database.
	Table = "operatives"
	// FromoperativeTable is the table the holds the fromoperative relation/edge.
	FromoperativeTable = "operativerecords"
	// FromoperativeInverseTable is the table name for the Operativerecord entity.
	// It exists in this package in order to avoid circular dependency with the "operativerecord" package.
	FromoperativeInverseTable = "operativerecords"
	// FromoperativeColumn is the table column denoting the fromoperative relation/edge.
	FromoperativeColumn = "operative_type"
)

// Columns holds all SQL columns for operative fields.
var Columns = []string{
	FieldID,
	FieldOperativeType,
	FieldOperativeName,
}

var (
	// OperativeTypeValidator is a validator for the "operativeType" field. It is called by the builders before save.
	OperativeTypeValidator func(string) error
	// OperativeNameValidator is a validator for the "operativeName" field. It is called by the builders before save.
	OperativeNameValidator func(string) error
)
